colnames(p_table) <- c("t", "glm")
ratio_table <- matrix(NA, nrow=niter, ncol=2)
colnames(ratio_table) <- c("cn", "trt")
for(iter in 1:niter){
# are N_reg and N_eff correlated within individuals?
N_reg.cn <- rnegbin(n, mu=mu_reg.cn, theta=theta)
N_eff.cn <- rnegbin(n, mu=mu_eff.cn, theta=theta)
N_reg.trt <- rnegbin(n, mu=mu_reg.trt, theta=theta)
N_eff.trt <- rnegbin(n, mu=mu_eff.trt, theta=theta)
ratio.cn <- N_eff.cn/N_reg.cn
ratio.trt <- N_eff.trt/N_reg.trt
ratio_table[iter,] <- c(mean(ratio.cn), mean(ratio.trt))
p_table[iter, 1] <- t.test(ratio.cn, ratio.trt, var.equal = FALSE)$p.value
fd <- data.table(N_reg=c(N_reg.cn, N_reg.trt),
N_eff=c(N_eff.cn, N_eff.trt),
treatment=rep(c("cn", "trt"), each=n))
fit <- glm(cbind(N_eff, N_reg) ~ treatment, family=binomial, data=fd)
fd[, yhat:=predict(fit, type="response")]
p_table[iter, 2] <- coef(summary(fit))["treatmenttrt", "Pr(>|z|)"]
}
apply(ratio_table, 2, mean)
apply(p_table, 2, function(x) length(which(x <= 0.05))/niter)
library(ggplot2)
library(data.table)
library(MASS)
niter <- 5000
b1 <- 1.5
mu_reg.cn <- 10^4
mu_eff.cn <- mu_reg.cn*1.5
mu_reg.trt <- mu_reg.cn*10
mu_eff.trt <- mu_reg.trt*(1.5+b1)
theta <- 5
n <- 10
p_table <- matrix(NA, nrow=niter, ncol=2)
colnames(p_table) <- c("t", "glm")
ratio_table <- matrix(NA, nrow=niter, ncol=2)
colnames(ratio_table) <- c("cn", "trt")
for(iter in 1:niter){
# are N_reg and N_eff correlated within individuals?
N_reg.cn <- rnegbin(n, mu=mu_reg.cn, theta=theta)
N_eff.cn <- rnegbin(n, mu=mu_eff.cn, theta=theta)
N_reg.trt <- rnegbin(n, mu=mu_reg.trt, theta=theta)
N_eff.trt <- rnegbin(n, mu=mu_eff.trt, theta=theta)
ratio.cn <- N_eff.cn/N_reg.cn
ratio.trt <- N_eff.trt/N_reg.trt
ratio_table[iter,] <- c(mean(ratio.cn), mean(ratio.trt))
p_table[iter, 1] <- t.test(ratio.cn, ratio.trt, var.equal = FALSE)$p.value
fd <- data.table(N_reg=c(N_reg.cn, N_reg.trt),
N_eff=c(N_eff.cn, N_eff.trt),
treatment=rep(c("cn", "trt"), each=n))
p_table[iter, 2] <- NA
}
apply(ratio_table, 2, mean)
apply(p_table, 2, function(x) length(which(x <= 0.05))/niter)
wilcox.test(ratio.cn, ratio.trt)$p.value
library(ggplot2)
library(data.table)
library(MASS)
niter <- 5000
b1 <- 1.5
mu_reg.cn <- 10^4
mu_eff.cn <- mu_reg.cn*1.5
mu_reg.trt <- mu_reg.cn*10
mu_eff.trt <- mu_reg.trt*(1.5+b1)
theta <- 5
n <- 10
p_table <- matrix(NA, nrow=niter, ncol=2)
colnames(p_table) <- c("t", "wilcoxon")
ratio_table <- matrix(NA, nrow=niter, ncol=2)
colnames(ratio_table) <- c("cn", "trt")
for(iter in 1:niter){
# are N_reg and N_eff correlated within individuals?
N_reg.cn <- rnegbin(n, mu=mu_reg.cn, theta=theta)
N_eff.cn <- rnegbin(n, mu=mu_eff.cn, theta=theta)
N_reg.trt <- rnegbin(n, mu=mu_reg.trt, theta=theta)
N_eff.trt <- rnegbin(n, mu=mu_eff.trt, theta=theta)
ratio.cn <- N_eff.cn/N_reg.cn
ratio.trt <- N_eff.trt/N_reg.trt
ratio_table[iter,] <- c(mean(ratio.cn), mean(ratio.trt))
p_table[iter, 1] <- t.test(ratio.cn, ratio.trt, var.equal = FALSE)$p.value
fd <- data.table(N_reg=c(N_reg.cn, N_reg.trt),
N_eff=c(N_eff.cn, N_eff.trt),
treatment=rep(c("cn", "trt"), each=n))
p_table[iter, 2] <- wilcox.test(ratio.cn, ratio.trt)$p.value
}
apply(ratio_table, 2, mean)
apply(p_table, 2, function(x) length(which(x <= 0.05))/niter)
library(ggplot2)
library(data.table)
library(MASS)
niter <- 5000
b1 <- 0
mu_reg.cn <- 10^4
mu_eff.cn <- mu_reg.cn*1.5
mu_reg.trt <- mu_reg.cn*10
mu_eff.trt <- mu_reg.trt*(1.5+b1)
theta <- 5
n <- 10
p_table <- matrix(NA, nrow=niter, ncol=2)
colnames(p_table) <- c("t", "wilcoxon")
ratio_table <- matrix(NA, nrow=niter, ncol=2)
colnames(ratio_table) <- c("cn", "trt")
for(iter in 1:niter){
# are N_reg and N_eff correlated within individuals?
N_reg.cn <- rnegbin(n, mu=mu_reg.cn, theta=theta)
N_eff.cn <- rnegbin(n, mu=mu_eff.cn, theta=theta)
N_reg.trt <- rnegbin(n, mu=mu_reg.trt, theta=theta)
N_eff.trt <- rnegbin(n, mu=mu_eff.trt, theta=theta)
ratio.cn <- N_eff.cn/N_reg.cn
ratio.trt <- N_eff.trt/N_reg.trt
ratio_table[iter,] <- c(mean(ratio.cn), mean(ratio.trt))
p_table[iter, 1] <- t.test(ratio.cn, ratio.trt, var.equal = FALSE)$p.value
fd <- data.table(N_reg=c(N_reg.cn, N_reg.trt),
N_eff=c(N_eff.cn, N_eff.trt),
treatment=rep(c("cn", "trt"), each=n))
p_table[iter, 2] <- wilcox.test(ratio.cn, ratio.trt)$p.value
}
apply(ratio_table, 2, mean)
apply(p_table, 2, function(x) length(which(x <= 0.05))/niter)
mu_1 <- 4*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- rep(treatment_levels, each=n)
X <- model.matrix(~treatment)
X
mu_1 <- 4*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
X
mu_1 <- 4*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- c(mu_1, mu_2)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
library(ggplot2)
library(ggpubr)
library(data.table)
library(MASS)
mu_1 <- 4*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- c(mu_1, mu_2)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
head(fd)
fd[, y:=rnegbin(n, mu=mu, theta=theta)]
rnegbin(n, mu=mu, theta=theta)
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
fd
mu_1 <- 4*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- c(mu_1, mu_2)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
ggscatter(x="Treatment", y="y", data=fd)
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
}
mu_1 <- 4*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- c(mu_1, mu_2)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
}
ggscatter(x="Treatment", y="y", data=fd)
mu_1 <- 4*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- c(mu_1, mu_2)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
}
ggscatter(x="Treatment", y="y", data=fd, add=c("mean", "jitter"))
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
mu_1 <- 2*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- c(mu_1, mu_2)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
niter <- 1
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
mu_1 <- 2*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- c(mu_1, mu_2)
theta <- 100
fd <- data.table(Treatment=treatment, y=NA)
niter <- 1
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
mu_1 <- 2*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- rep(c(mu_1, mu_2), each=n)
theta <- 100
fd <- data.table(Treatment=treatment, y=NA)
niter <- 1
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
mu_1 <- 2*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- rep(c(mu_1, mu_2), each=n)
theta <- 10
fd <- data.table(Treatment=treatment, y=NA)
niter <- 1
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
mu_1 <- 2*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- rep(c(mu_1, mu_2), each=n)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
niter <- 1
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
mu_1 <- 3*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- rep(c(mu_1, mu_2), each=n)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
niter <- 1
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
t.test(y~Treatment, data=fd, var.equal=FALSE)
fit <- glm.nb(y~Treatment, data=fd)
coef(summary(fit))
mu_1 <- 3*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- rep(c(mu_1, mu_2), each=n)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
models <- c("t", "Welch", "Wilcoxan", "glm")
p_table <- matrix(NA, nrow=niter, ncol=length(models))
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
p_table[iter, "t"] <- t.test(y~Treatment, data=fd, var.equal=TRUE)$p.value
p_table[iter, "Welch"] <- t.test(y~Treatment, data=fd, var.equal=FALSE)$p.value
p_table[iter, "Wilcoxan"] <- wilcox.test(y~Treatment, data=fd)$p.value
fit <- glm.nb(y~Treatment, data=fd)
p_table[iter, "glm"] <- coef(summary(fit))["TreatmentFcgRIV--", "Pr(>|z|)"]
}
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
p_table[iter, "t"] <- t.test(y~Treatment, data=fd, var.equal=TRUE)$p.value
t.test(y~Treatment, data=fd, var.equal=TRUE)$p.value
mu_1 <- 3*10^4
mu_2 <- 15*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- rep(c(mu_1, mu_2), each=n)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
models <- c("t", "Welch", "Wilcoxan", "glm")
p_table <- matrix(NA, nrow=niter, ncol=length(models))
colnames(p_table) <- models
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
p_table[iter, "t"] <- t.test(y~Treatment, data=fd, var.equal=TRUE)$p.value
p_table[iter, "Welch"] <- t.test(y~Treatment, data=fd, var.equal=FALSE)$p.value
p_table[iter, "Wilcoxan"] <- wilcox.test(y~Treatment, data=fd)$p.value
fit <- glm.nb(y~Treatment, data=fd)
p_table[iter, "glm"] <- coef(summary(fit))["TreatmentFcgRIV--", "Pr(>|z|)"]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
apply(p_table, 2, function(x) length(which(x <= 0.05))/niter)
head(p_table)
mu_1 <- 4*10^4
mu_2 <- 12*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- rep(c(mu_1, mu_2), each=n)
theta <- 5
fd <- data.table(Treatment=treatment, y=NA)
models <- c("t", "Welch", "Wilcoxan", "glm")
p_table <- matrix(NA, nrow=niter, ncol=length(models))
colnames(p_table) <- models
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
p_table[iter, "t"] <- t.test(y~Treatment, data=fd, var.equal=TRUE)$p.value
p_table[iter, "Welch"] <- t.test(y~Treatment, data=fd, var.equal=FALSE)$p.value
p_table[iter, "Wilcoxan"] <- wilcox.test(y~Treatment, data=fd)$p.value
fit <- glm.nb(y~Treatment, data=fd)
p_table[iter, "glm"] <- coef(summary(fit))["TreatmentFcgRIV--", "Pr(>|z|)"]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
apply(p_table, 2, function(x) length(which(x <= 0.05))/niter)
mu_1 <- 4*10^4
mu_2 <- 12*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- rep(c(mu_1, mu_2), each=n)
theta <- 1
fd <- data.table(Treatment=treatment, y=NA)
models <- c("t", "Welch", "Wilcoxan", "glm")
p_table <- matrix(NA, nrow=niter, ncol=length(models))
colnames(p_table) <- models
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
p_table[iter, "t"] <- t.test(y~Treatment, data=fd, var.equal=TRUE)$p.value
p_table[iter, "Welch"] <- t.test(y~Treatment, data=fd, var.equal=FALSE)$p.value
p_table[iter, "Wilcoxan"] <- wilcox.test(y~Treatment, data=fd)$p.value
fit <- glm.nb(y~Treatment, data=fd)
p_table[iter, "glm"] <- coef(summary(fit))["TreatmentFcgRIV--", "Pr(>|z|)"]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
apply(p_table, 2, function(x) length(which(x <= 0.05))/niter)
mu_1 <- 4*10^4
mu_2 <- 12*10^4
beta_1 <- mu_2 - mu_1
n <- 10
niter <- 1000
treatment_levels <- c("WT", "FcgRIV--")
treatment <- factor(rep(treatment_levels, each=n), treatment_levels)
X <- model.matrix(~treatment)
mu <- rep(c(mu_1, mu_2), each=n)
theta <- 3
fd <- data.table(Treatment=treatment, y=NA)
models <- c("t", "Welch", "Wilcoxan", "glm")
p_table <- matrix(NA, nrow=niter, ncol=length(models))
colnames(p_table) <- models
for(iter in 1:niter){
fd[, y:=rnegbin(2*n, mu=mu, theta=theta)]
p_table[iter, "t"] <- t.test(y~Treatment, data=fd, var.equal=TRUE)$p.value
p_table[iter, "Welch"] <- t.test(y~Treatment, data=fd, var.equal=FALSE)$p.value
p_table[iter, "Wilcoxan"] <- wilcox.test(y~Treatment, data=fd)$p.value
fit <- glm.nb(y~Treatment, data=fd)
p_table[iter, "glm"] <- coef(summary(fit))["TreatmentFcgRIV--", "Pr(>|z|)"]
}
ggerrorplot(x="Treatment", y="y", data=fd, desc_stat = "mean", add=c("jitter"))
apply(p_table, 2, function(x) length(which(x <= 0.05))/niter)
.9^4
9*9
8*9
80*9
720*9
.9^4
9*9*9*9
library(data.table)
library(ggplot2)
mu <- 4.3
n <- 10^3
y <- rpois(mu)
rpois
library(data.table)
library(ggplot2)
mu <- 4.3
n <- 10^3
y <- rpois(n, lambda=mu)
mean(y)
library(data.table)
library(ggplot2)
mu <- 4.3
n <- 10^4
y <- rpois(n, lambda=mu)
mean(y)
library(data.table)
library(ggplot2)
mu <- 4.3
n <- 10^4
y <- rpois(n, lambda=mu)
fit <- glm(y ~ 1)
coef(summary(fit))
mean(y)
log(0)
knitr::opts_chunk$set(echo = TRUE)
sonadata <- data.frame(Last_name <- c("walker", "sexton", "unruh", "klebe", "copeland", "page"),
size <- rnorm(6))
noncompleters=sonadata%>%filter(!is.na(Last_name))
library(tidyverse)
sonadata <- data.frame(Last_name <- c("walker", "sexton", "unruh", "klebe", "copeland", "page"),
size <- rnorm(6))
noncompleters=sonadata%>%filter(!is.na(Last_name))
library(tidyverse)
sonadata <- data.frame(Last_name <- c("walker", "sexton", "unruh", "klebe", "copeland", "page"),
size <- rnorm(6))
noncompleters=sonadata%>%filter(!is.na(Last_name))
noncompleters
library(tidyverse)
sonadata <- data.frame(Last_name <- c("walker", "sexton", "unruh", NA, "klebe", "copeland", "page"),
size <- rnorm(7))
noncompleters=sonadata%>%filter(!is.na(Last_name))
noncompleters
library(tidyverse)
sonadata <- data.frame(Last_name <- c("walker", "sexton", "unruh", NA, "klebe", "copeland", "page"),
size <- rnorm(7))
noncompleters=sonadata%>%filter(!is.na(Last_name))
sonadata
noncompleters
ex <- sample(1:77, 16)
ex
ex <- sample(1:77, 25)
ex
order(ex)
?order
sort.list(ex)
order(ex)
order(ex, decrease=TRUE)
order(ex, decreasing=TRUE)
ex
order(order(ex))
ex[order(ex)]
ex[order(ex, decreasing=TRUE)]
ex <- sample(1:76, 16)
ex[order(ex, decreasing=TRUE)]
ex <- sample(1:71, 11)
ex[order(ex, decreasing=TRUE)]
ex <- sample(1:66, 6)
ex[order(ex, decreasing=TRUE)]
